@model quiz.Models.Option

@{
    ViewData["Title"] = "Details";
    var associatedQuestionText = ViewBag.AssociatedQuestionText as string;
    var associatedQuestionId = ViewBag.AssociatedQuestionId as int?;
}
<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active"><a asp-controller="Admin" asp-action="AdminPanel" style="color: inherit; text-decoration: none;">Admin Panel</a></li>
        <li class="breadcrumb-item active">Option</li>
    </ol>
    <h1>Details</h1>

    <div>
        <h4>Option</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.OptionText)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.OptionText)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.OptionIsCorrect)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.OptionIsCorrect)
            </dd>
            @if (!string.IsNullOrEmpty(associatedQuestionText))
            {
                <dt class="col-sm-2">Associated Question</dt>
                <dd class="col-sm-10">
                    @associatedQuestionText
                    @if (associatedQuestionId.HasValue)
                    {
                        @: - <a href="@Url.Action("Details", "Questions", new { id = associatedQuestionId })">View Question</a>
                    }
                </dd>
            }
        </dl>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model?.OptionId">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
</div>
