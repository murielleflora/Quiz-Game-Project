@model quiz.Models.Option

@{
    ViewData["Title"] = "Edit";
}
<div class="container-fluid px-4">
    <h1 class="mt-4">Dashboard</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item active"><a asp-controller="Admin" asp-action="AdminPanel" style="color: inherit; text-decoration: none;">Admin Panel</a></li>
        <li class="breadcrumb-item active">Option</li>
    </ol>
    <h1>Edit</h1>

    <h4>Option</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Edit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="OptionId" />
                <div class="form-group">
                    <label asp-for="OptionText" class="control-label"></label>
                    <input asp-for="OptionText" class="form-control" />
                    <span asp-validation-for="OptionText" class="text-danger"></span>
                </div>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="OptionIsCorrect" /> @Html.DisplayNameFor(model => model.OptionIsCorrect)
                    </label>
                </div>
                <div class="form-group">
                    <label for="QuestionId">Question</label>
                    <select id="QuestionId" name="QuestionId" class="form-control" asp-items="ViewBag.QuestionId"></select>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
